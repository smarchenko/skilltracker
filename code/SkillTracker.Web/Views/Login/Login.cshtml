@model SkillTracker.Web.Models.LoginModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="site clear-fix">
  <div class="auth-form-container" id="site-container">
    <section class="flash-messages container">
      @if (!this.ViewData.ModelState.IsValid)
      {
        var messages = new List<string>();
        foreach (string key in this.ViewData.ModelState.Keys)
        {
          var state = this.ViewData.ModelState[key];
          if (state == null)
          {
            continue;
          }
          
          foreach (ModelError error in state.Errors)
          {
            if (!string.IsNullOrEmpty(error.ErrorMessage))
            {
              messages.Add(error.ErrorMessage);
            }
          }
        }

        if (messages.Count > 0)
        {
          <text>
            <div class="flash flash-error" id="error-message">
              @foreach (string message in messages)
              {
                <text>
                  <div>
                    @message  
                  </div>
                </text>
              }
            </div>
          </text>
        }
      }
    </section>
    <form class="auth-form" method="POST" action="">
      @Html.AntiForgeryToken()
      <div class="auth-form-header">
        <h1>Sign in</h1>
      </div>
      <div class="auth-form-body">
        @Html.LabelFor(m => m.UserMail, "User Email")
        @Html.TextBoxFor(m => m.UserMail, new Dictionary<string, object>{ {"type" , "email"}, {"autofocus", "autofocus"}, {"class", "input-block"}, {"tabindex", "1"}, {"required", "true"} } )
        @Html.ValidationMessageFor(m => m.UserMail)

        @Html.LabelFor(m => m.Password, "Password")<label> <a href="#" onclick="javascript:alert('link to password recovery page here.');">(forgot password)</a></label>
        @Html.TextBoxFor(m => m.Password, new Dictionary<string, object>{{"class", "input-block"}, {"tabindex", "2"}, {"type", "password"}, {"required", "true"}})
        @Html.ValidationMessageFor(m => m.Password)
        <input class="button" name="commit" tabindex="3" type="submit" value="Sign in">
      </div>
    </form>
  </div>
</div>
